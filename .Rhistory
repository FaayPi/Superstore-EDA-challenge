group_by(Ship.Mode) %>%
summarise(Total_Margin = mean((Profit/Sales)*100))
View(Margins_by_shipping_mode)
# Compare profit margins across shipping modes
Margins_by_ship_mode <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Ship.Mode) %>%
summarise(Total_Margin = mean((Profit/Sales)*100))
View(Margins_by_ship_mode)
print(Margins_by_ship_mode)
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Total_Margin_Percentage = mean((Profit/Sales)*100))
Margins_by_category %>%
slice_min(Total_Margin_Percentage) %>%
print()
# Calculate the profit margin difference between the top and the bottom categories
profit_margin_difference <- Margins_by_category %>%
summarise(
max_margin = max(Total_Margin_Percentage),
min_margin = min(Total_Margin_Percentage),
difference = max_margin/min_margin
# Compare profit margins across shipping modes
Margins_by_ship_mode <- superstore %>%
Margins_by_ship_mode <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Ship.Mode) %>%
summarise(Margin_Percentage = mean((Profit/Sales)*100))
print(Margins_by_ship_mode)
# Compare profit margins across shipping modes
Margins_by_ship_mode <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Ship.Mode) %>%
summarise(Margin_Percentage = mean((Profit/Sales)*100)) %>%
mutate(Net_Margin =(Profit/Sales)*100)
summarise((Net_Margin =(Profit/Sales)*100)
# Compare profit margins across shipping modes
Margins_by_ship_mode <- superstore %>%
# Question 5: How does shipping mode affect profitability?
# Compare profit margins across shipping modes
Margins_by_ship_mode <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Ship.Mode) %>%
summarise(Net_Margin =(Profit/Sales)*100)
print(Margins_by_ship_mode)
summarise(Net_Margin =((sum(Profit)/sum(Sales))*100)
# Compare profit margins across shipping modes
Margins_by_ship_mode <- superstore %>%
View(Margins_by_shipping_mode)
summarise(Net_Margin_Percentage = (sum(Profit)/sum(Sales)*100)
# Calculate Total Margin by category
Margins_by_category <- superstore %>%
# Calculate Total Margin by category
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = (sum(Profit)/sum(Sales))*100)
# Calculate Total Margin by category
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = (sum(Profit)/sum(Sales))*100)
Margins_by_category %>%
slice_min(Net_Margin) %>%
print()
View(Margins_per_category)
Margins_by_ship_mode <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Ship.Mode) %>%
summarise(Net_Margin =((sum(Profit)/sum(Sales))*100)
print(Margins_by_ship_mode)
View(Margins_by_ship_mode)
# Compare profit margins across shipping modes
Margins_by_ship_mode <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Ship.Mode) %>%
summarise(Net_Margin =((sum(Profit)/sum(Sales))*100))
View(Margins_by_shipping_mode)
# Calculate profit per order for each shipping mode
Avg_order_profit_by_shipmode <- superstore %>%
group_by(Ship.Mode) %>%
summarise(Avg_Order_Profit= sum(Profit)/n())
View(Avg_order_profit_by_shipmode)
summarise(Avg_Order_Profit= round(sum(Profit)/n(),0)
View(Avg_order_profit_by_shipmode)
# Calculate profit per order for each shipping mode
Avg_order_profit_by_shipmode <- superstore %>%
group_by(Ship.Mode) %>%
summarise(Avg_Order_Profit= round(sum(Profit)/n(),0))
View(Avg_order_profit_by_shipmode)
# Calculate profit per order for each shipping mode
Avg_order_profit_by_shipmode <- superstore %>%
group_by(Ship.Mode) %>%
summarise(Avg_Order_Profit= round(sum(Profit)/n(),2))
View(Avg_order_profit_by_shipmode)
print(Avg_order_profit_by_shipmode)
library(dplyr)
---
title: "Superstore Data Analysis"
library(dplyr)
library(ggplot2)
install.packages("lubridate")
library(lubridate)
superstore <- read.csv("C:\\Users\\fee10\\Ironhack\\Module2\\Labs\\lab-r-dataframes\\dataset\\Sample - Superstore.csv")
superstore <- superstore %>%
mutate(Order.Date = as.Date(Order.Date, format="%m/%d/%Y"))
sales_by_months <- superstore %>%
mutate(Month_Year = format(Order.Date, "%m/%Y")) %>%
mutate(Year = format(Order.Date, "%Y"))
grouped_sales_months <- sales_by_months %>%
filter(!is.na(Sales)) %>%
group_by(Month_Year) %>%
summarise(Total_Sales = sum(Sales, na.rm = TRUE), .groups = "drop") %>%
mutate(Month_Year = factor(Month_Year, levels = unique(Month_Year)))
grouped_sales_months <- grouped_sales_months %>%
mutate(Month_Year = dmy(paste("01", Month_Year, sep = "/")))
ggplot(grouped_sales_months, aes(x = Month_Year, y = Total_Sales)) +
geom_line(color = "blue") +
geom_smooth(method = "lm", color = "red", se = FALSE) +
geom_point() +
labs(title = "Monthly Sales Performance Over Time", x = "Month/Year", y = "Total Sales") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, hjust = 1))
Sales_2017_start <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "01/2017"]
library(dplyr)
library(ggplot2)
install.packages("lubridate")
library(lubridate)
---
title: "Superstore Data Analysis"
library(dplyr)
library(ggplot2)
install.packages("lubridate")
library(lubridate)
summary(cars)
plot(pressure)
library(dplyr)
library(ggplot2)
install.packages("lubridate")
library(lubridate)
superstore <- read.csv("C:\\Users\\fee10\\Ironhack\\Module2\\Labs\\lab-r-dataframes\\dataset\\Sample - Superstore.csv")
superstore <- superstore %>%
mutate(Order.Date = as.Date(Order.Date, format="%m/%d/%Y"))
sales_by_months <- superstore %>%
mutate(Month_Year = format(Order.Date, "%m/%Y")) %>%
mutate(Year = format(Order.Date, "%Y"))
grouped_sales_months <- sales_by_months %>%
filter(!is.na(Sales)) %>%
group_by(Month_Year) %>%
summarise(Total_Sales = sum(Sales, na.rm = TRUE), .groups = "drop") %>%
mutate(Month_Year = factor(Month_Year, levels = unique(Month_Year)))
grouped_sales_months <- grouped_sales_months %>%
mutate(Month_Year = dmy(paste("01", Month_Year, sep = "/")))
ggplot(grouped_sales_months, aes(x = Month_Year, y = Total_Sales)) +
geom_line(color = "blue") +
geom_smooth(method = "lm", color = "red", se = FALSE) +
geom_point() +
labs(title = "Monthly Sales Performance Over Time", x = "Month/Year", y = "Total Sales") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, hjust = 1))
Sales_2017_start <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "01/2017"]
growth_rate <- ((Sales_2017_end / Sales_2017_start) *100)
Sales_2017_start <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "01/2017"]
Sales_2017_end <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-12-01"]
Sales_2017_start <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-01-01"]
Sales_2017_end <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-12-01"]
growth_rate <- ((Sales_2017_end / Sales_2017_start) *100)
print(growth_rate)
library(dplyr)
library(ggplot2)
install.packages("lubridate")
library(lubridate)
summary(cars)
plot(pressure)
library(dplyr)
library(ggplot2)
install.packages("lubridate")
library(lubridate)
superstore <- read.csv("C:\\Users\\fee10\\Ironhack\\Module2\\Labs\\lab-r-dataframes\\dataset\\Sample - Superstore.csv")
superstore <- superstore %>%
mutate(Order.Date = as.Date(Order.Date, format="%m/%d/%Y"))
sales_by_months <- superstore %>%
mutate(Month_Year = format(Order.Date, "%m/%Y")) %>%
mutate(Year = format(Order.Date, "%Y"))
grouped_sales_months <- sales_by_months %>%
filter(!is.na(Sales)) %>%
group_by(Month_Year) %>%
summarise(Total_Sales = sum(Sales, na.rm = TRUE), .groups = "drop") %>%
mutate(Month_Year = factor(Month_Year, levels = unique(Month_Year)))
grouped_sales_months <- grouped_sales_months %>%
mutate(Month_Year = dmy(paste("01", Month_Year, sep = "/")))
ggplot(grouped_sales_months, aes(x = Month_Year, y = Total_Sales)) +
geom_line(color = "blue") +
geom_smooth(method = "lm", color = "red", se = FALSE) +
geom_point() +
labs(title = "Monthly Sales Performance Over Time", x = "Month/Year", y = "Total Sales") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, hjust = 1))
library(dplyr)
library(ggplot2)
install.packages("lubridate")
library(lubridate)
superstore <- read.csv("C:\\Users\\fee10\\Ironhack\\Module2\\Labs\\lab-r-dataframes\\dataset\\Sample - Superstore.csv")
superstore <- superstore %>%
mutate(Order.Date = as.Date(Order.Date, format="%m/%d/%Y"))
sales_by_months <- superstore %>%
mutate(Month_Year = format(Order.Date, "%m/%Y")) %>%
mutate(Year = format(Order.Date, "%Y"))
grouped_sales_months <- sales_by_months %>%
filter(!is.na(Sales)) %>%
group_by(Month_Year) %>%
summarise(Total_Sales = sum(Sales, na.rm = TRUE), .groups = "drop") %>%
mutate(Month_Year = factor(Month_Year, levels = unique(Month_Year)))
grouped_sales_months <- grouped_sales_months %>%
mutate(Month_Year = dmy(paste("01", Month_Year, sep = "/")))
ggplot(grouped_sales_months, aes(x = Month_Year, y = Total_Sales)) +
geom_line(color = "blue") +
geom_smooth(method = "lm", color = "red", se = FALSE) +
geom_point() +
labs(title = "Monthly Sales Performance Over Time", x = "Month/Year", y = "Total Sales") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, hjust = 1))
Sales_2017_start <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-01-01"]
Sales_2017_end <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-12-01"]
growth_rate <- ((Sales_2017_end / Sales_2017_start) *100)
print(growth_rate)
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = (sum(Profit) / sum(Sales)) * 100)
Margins_by_category %>%
slice_min(Net_Margin) %>%
print()
profit_margin_difference <- Margins_by_category %>%
summarise(
max_margin = max(Net_Margin),
min_margin = min(Net_Margin),
difference = max_margin / min_margin
)
print(profit_margin_difference)
Sales_and_Profit_by_Region <- superstore %>%
group_by(Region) %>%
summarise(
Total_Sales = sum(Sales),
Total_Profit = sum(Profit)
)
best_performing_region <- Sales_and_Profit_by_Region %>%
filter(Region == Region[which.max(Total_Sales + Total_Profit)])
print(best_performing_region)
region_negative_profit <- Sales_and_Profit_by_Region %>%
filter(Total_Profit < 0)
print(region_negative_profit)
correlation_test_profit_sales <- cor.test(superstore$Sales, superstore$Profit)
print(correlation_test_profit_sales$p.value)  # p-value of 0 indicates strong correlation
ggplot(superstore, aes(x = Sales, y = Profit)) +
geom_line(color = "blue") +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "Correlation between Sales and Profit", x = "Sales", y = "Profit") +
theme_min
ggplot(superstore, aes(x = Sales, y = Profit)) +
geom_line(color = "blue") +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "Correlation between Sales and Profit", x = "Sales", y = "Profit") +
theme_minimal
ggplot(superstore, aes(x = Sales, y = Profit)) +
geom_line(color = "blue") +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "Correlation between Sales and Profit", x = "Sales", y = "Profit") +
theme_minimal()
library(dplyr)
library(ggplot2)
install.packages("lubridate")
library(lubridate)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(lubridate)
library(dplyr)
library(ggplot2)
library(lubridate)
superstore <- read.csv("C:\\Users\\fee10\\Ironhack\\Module2\\Labs\\lab-r-dataframes\\dataset\\Sample - Superstore.csv")
superstore <- superstore %>%
mutate(Order.Date = as.Date(Order.Date, format="%m/%d/%Y"))
sales_by_months <- superstore %>%
mutate(Month_Year = format(Order.Date, "%m/%Y")) %>%
mutate(Year = format(Order.Date, "%Y"))
grouped_sales_months <- sales_by_months %>%
filter(!is.na(Sales)) %>%
group_by(Month_Year) %>%
summarise(Total_Sales = sum(Sales, na.rm = TRUE), .groups = "drop") %>%
mutate(Month_Year = factor(Month_Year, levels = unique(Month_Year)))
grouped_sales_months <- grouped_sales_months %>%
mutate(Month_Year = dmy(paste("01", Month_Year, sep = "/")))
ggplot(grouped_sales_months, aes(x = Month_Year, y = Total_Sales)) +
geom_line(color = "blue") +
geom_smooth(method = "lm", color = "red", se = FALSE) +
geom_point() +
labs(title = "Monthly Sales Performance Over Time", x = "Month/Year", y = "Total Sales") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, hjust = 1))
Sales_2017_start <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-01-01"]
Sales_2017_end <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-12-01"]
growth_rate <- ((Sales_2017_end / Sales_2017_start) *100)
print(growth_rate)
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = (sum(Profit) / sum(Sales)) * 100)
Margins_by_category %>%
slice_min(Net_Margin) %>%
print()
profit_margin_difference <- Margins_by_category %>%
summarise(
max_margin = max(Net_Margin),
min_margin = min(Net_Margin),
difference = max_margin / min_margin
)
print(profit_margin_difference)
Sales_and_Profit_by_Region <- superstore %>%
group_by(Region) %>%
summarise(
Total_Sales = sum(Sales),
Total_Profit = sum(Profit)
)
best_performing_region <- Sales_and_Profit_by_Region %>%
filter(Region == Region[which.max(Total_Sales + Total_Profit)])
print(best_performing_region)
region_negative_profit <- Sales_and_Profit_by_Region %>%
filter(Total_Profit < 0)
print(region_negative_profit)
correlation_test_profit_sales <- cor.test(superstore$Sales, superstore$Profit)
print(correlation_test_profit_sales$p.value)  # p-value of 0 indicates strong correlation
ggplot(superstore, aes(x = Sales, y = Profit)) +
geom_line(color = "blue") +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = "Correlation between Sales and Profit", x = "Sales", y = "Profit") +
theme_minimal()
customer_segments <- superstore %>%
group_by(Segment) %>%
summarise(Customer_Count = n()) %>%
mutate(Customer_Percentage = round((Customer_Count/sum(Customer_Count))*100,0))
print(customer_segments)
revenue_by_segment <- superstore %>%
group_by(Segment) %>%
summarise(
Total_Revenue = sum(Sales)
)
best_performing_segment <- revenue_by_segment %>%
filter(Segment == Segment[which.max(Total_Revenue)])
print(best_performing_segment)
Margins_by_ship_mode <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Ship.Mode) %>%
summarise(Net_Margin =((sum(Profit)/sum(Sales))*100))
print(Margins_by_ship_mode)
Avg_order_profit_by_shipmode <- superstore %>%
group_by(Ship.Mode) %>%
summarise(Avg_Order_Profit= round(sum(Profit)/n(),2))
print(Avg_order_profit_by_shipmode)
summarise(Net_Margin = round((sum(Profit) / sum(Sales)) * 100),2
Margins_by_category <- superstore %>%
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = round((sum(Profit) / sum(Sales)) * 100),2)
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = round((sum(Profit) / sum(Sales)) * 100),2)
Margins_by_category %>%
slice_min(Net_Margin) %>%
print()
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = round((sum(Profit) / sum(Sales)) * 100),2)
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = round((sum(Profit) / sum(Sales)) * 100),2)
Margins_by_category %>%
slice_min(Net_Margin) %>%
print()
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = (sum(Profit) / sum(Sales)) * 100))
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = (sum(Profit) / sum(Sales)) * 100))
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = (sum(Profit) / sum(Sales)) * 100)
Margins_by_category %>%
slice_min(Net_Margin) %>%
print()
summarise(Net_Margin = round((sum(Profit) / sum(Sales)) * 100, 2)
Margins_by_category <- superstore %>%
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = round((sum(Profit) / sum(Sales)) * 100, 2))
Margins_by_category %>%
slice_min(Net_Margin) %>%
print()
profit_margin_difference <- Margins_by_category %>%
summarise(
max_margin = max(Net_Margin),
min_margin = min(Net_Margin),
difference = round((max_margin / min_margin),2)
)
profit_margin_difference <- Margins_by_category %>%
summarise(
max_margin = max(Net_Margin),
min_margin = min(Net_Margin),
difference = round((max_margin / min_margin),2)
)
print(profit_margin_difference)
Sales_2017_start <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-01-01"]
Sales_2017_end <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-12-01"]
growth_rate <- round(((Sales_2017_end / Sales_2017_start) *100,2)
Sales_2017_start <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-01-01"]
Sales_2017_end <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-12-01"]
growth_rate <- round(((Sales_2017_end / Sales_2017_start) *100,2))
Sales_2017_start <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-01-01"]
Sales_2017_end <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year == "2017-12-01"]
growth_rate <- round(((Sales_2017_end / Sales_2017_start) * 100), 2)
print(growth_rate)
correlation_test_profit_sales <- cor.test(superstore$Sales, superstore$Profit)
cat("p-value:", round(correlation_test_profit_sales$p.value, 4))  # p-value of 0 indicates strong correlation
print(best_performing_region)
summarise(Net_Margin =round(((sum(Profit)/sum(Sales))*100, 2))
summarise(Net_Margin =round(((sum(Profit)/sum(Sales))*100, 2)
Margins_by_ship_mode <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Ship.Mode) %>%
summarise(Net_Margin =round(((sum(Profit)/sum(Sales))*100, 2)
Margins_by_ship_mode <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Ship.Mode) %>%
summarise(Net_Margin =round(((sum(Profit)/sum(Sales))*100, 2))
Margins_by_ship_mode <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Ship.Mode) %>%
summarise(Net_Margin =round((sum(Profit) / sum(Sales)) * 100, 2))
print(Margins_by_ship_mode)
library(dplyr)
library(ggplot2)
install.packages("lubridate")
library(lubridate)
superstore <- read.csv("C:\\Users\\fee10\\Ironhack\\Module2\\Labs\\lab-r-dataframes\\dataset\\Sample - Superstore.csv")
#Question 1: How does sales performance vary over time?
# change type opf Order.Date from factor to date
superstore <- superstore %>%
mutate(Order.Date=as.Date(Order.Date, format="%m/%d/%Y"))
# create two new variables Month_Year and Year
sales_by_months <- superstore %>%
mutate(Month_Year = format(Order.Date, "%m/%Y")) %>%
mutate(Year = format(Order.Date, "%Y"))
# group sales by months
grouped_sales_months <- sales_by_months %>%
filter(!is.na(Sales)) %>%
group_by(Month_Year) %>%
summarise(Total_Sales = sum(Sales, na.rm = TRUE), .groups = "drop") %>%
mutate(Month_Year = factor(Month_Year, levels = unique(Month_Year)))
# convert factor variable "Month_Year" from factor to date (needed step to draw the trendline)
grouped_sales_months <- grouped_sales_months %>%
mutate(Month_Year = dmy(paste("01", Month_Year, sep = "/")))
# create plot with peaks and trendline
ggplot(grouped_sales_months, aes(x =Month_Year, y = Total_Sales)) +
geom_line(color = "blue") +
geom_smooth(method="lm", color="red", se=FALSE) +
geom_point() +  # Optional, um klare Peaks und Dips hervorzuheben
labs(title = "Monthly Sales Performance Over Time", x = "Month/Year", y = "Total Sales") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 80, hjust = 1))
#YOY growth rate for the most recent complete year
Sales_2017_start <- grouped_sales_months$Total_Sales[grouped_sales_months$Month_Year =="01/2017"]
Margins_by_category <- superstore %>%
filter(if_all(c(Sales, Profit), ~ !is.na(.))) %>%
group_by(Category) %>%
summarise(Net_Margin = (sum(Profit)/sum(Sales))*100)
Margins_by_category %>%
slice_min(Net_Margin) %>%
print()
Sales_and_Profit_by_Region <- superstore %>%
group_by(Region) %>%
summarise(
Total_Sales = sum(Sales),
Total_Profit = sum(Profit)
)
Sales_and_Profit_by_Region <- superstore %>%
group_by(Region) %>%
summarise(
Total_Sales = sum(Sales),
Total_Profit = sum(Profit)
)
Sales_and_Profit_by_Region <- superstore %>%
group_by(Region) %>%
summarise(
Total_Sales = sum(Sales),
Total_Profit = sum(Profit)
)
Sales_and_Profit_by_Region <- superstore %>%
group_by(Region) %>%
summarise(
Total_Sales = sum(Sales),
Total_Profit = sum(Profit)
)
